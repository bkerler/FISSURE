/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(multiuser_chirp_detector_cc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(07f3a8e0bf8162cde013aff2c055a608)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <ieee802_15_4/multiuser_chirp_detector_cc.h>
// pydoc.h is automatically generated in the build directory
#include <multiuser_chirp_detector_cc_pydoc.h>

void bind_multiuser_chirp_detector_cc(py::module& m)
{

    using multiuser_chirp_detector_cc    = ::gr::ieee802_15_4::multiuser_chirp_detector_cc;


    py::class_<multiuser_chirp_detector_cc, gr::block, gr::basic_block,
        std::shared_ptr<multiuser_chirp_detector_cc>>(m, "multiuser_chirp_detector_cc", D(multiuser_chirp_detector_cc))

        .def(py::init(&multiuser_chirp_detector_cc::make),
           py::arg("chirp_seq"),
           py::arg("time_gap_1"),
           py::arg("time_gap_2"),
           py::arg("len_subchirp"),
           py::arg("threshold"),
           D(multiuser_chirp_detector_cc,make)
        )
        



        ;




}








